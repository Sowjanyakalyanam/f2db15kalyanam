{"version":3,"sources":["Employee.js"],"names":["Employee","require","exports","req","res","send","params","id","Employee_detail","Employee_delete","Employee_create_post","Employee_update_put","Employee_list","regeneratorRuntime","async","_context","prev","next","awrap","find","sent","theEmployee","t0","status","stop","Employee_view_all_Page","_context2","render","title","results","concat","document","result","_context3","console","log","body","EmpName","EmpType","EmpSal","save"],"mappings":"aAAA,IAAIA,SAAWC,QAAQ,sBAAvBC,QAAIF,cAAmB,SAAAG,EAAAC,GAGtBA,EAAIC,KAAK,mCAATD,QAAIC,gBAAK,SAAAF,EAAAC,GADVA,EAGAC,KAAA,qCAAAF,EAAAG,OAAAC,KACAL,QAAQM,qBAAkB,SAAAL,EAAAC,GACzBA,EAAGC,KAAH,0CAODH,QAAQO,gBAAkB,SAASN,EAAKC,GAJxCF,EAAAA,KAAQQ,2CAA0CP,EAAAG,OAAAC,KAQlDL,QAAQS,oBAAsB,SAASR,EAAKC,GAC3CA,EAAIC,KAAK,uCAAyCF,EAAIG,OAAOC,KAK9DL,QAAQU,cAAgB,SAAeT,EAAKC,GAApB,OAAAS,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAAAJ,mBAAAK,MALdlB,SAAAmB,QAKc,KAAA,EALvBf,YAKuBW,EAAAK,KAHxBhB,EAAAC,KAAAgB,aAGwBN,EAAAE,KAAA,GAAA,MAAA,KAAA,EAAAF,EAAAC,KAAA,EAAAD,EAAAO,GAAAP,EAAA,MAAA,GAMpBX,EAAImB,OAAO,KANfrB,EAAQU,KAARV,aAAAA,OAAAA,EAAAA,GAAAA,MAAwB,KAAA,GAAA,IAAA,MAAA,OAAAa,EAAAS,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,MAAAtB,QAAAuB,uBAAA,SAAAtB,EAAAC,GAAA,OAAAS,mBAAAC,MAAA,SAAAY,GAAA,OAAA,OAAAA,EAAAV,KAAAU,EAAAT,MAAA,KAAA,EAAA,OAAAS,EAAAV,KAAA,EAAAU,EAAAT,KAAA,EAAAJ,mBAAAK,MAAAlB,SAAAmB,QAAA,KAAA,EAAAE,YAAAK,EAAAN,KAepBhB,EAAIuB,OAAO,WAAY,CAAEC,MAAO,0BAA2BC,QAASR,cAfhDK,EAAAT,KAAA,GAAA,MAAA,KAAA,EAAAS,EAAAV,KAAA,EAAAU,EAAAJ,GAAAI,EAAA,MAAA,GAGpBtB,EAAAA,OAAIC,KAHgBD,EAAAC,KAAA,aAAAyB,OAAAJ,EAAAJ,GAAA,MAAA,KAAA,GAAA,IAAA,MAAA,OAAAI,EAAAF,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,MAAAtB,QAAAQ,qBAAA,SAAAP,EAAAC,GAAA,IAAA2B,EAAAC,EAAA,OAAAnB,mBAAAC,MAAA,SAAAmB,GAAA,OAAA,OAAAA,EAAAjB,KAAAiB,EAAAhB,MAAA,KAAA,EAAA,OAAAiB,QAAAC,IAAAhC,EAAAiC,OAMpBhC,EAAImB,IAAOvB,UANSqC,QAAAlC,EAAAiC,KAAAC,QAAAN,EAAAO,QAAAnC,EAAAiC,KAAAE,QAAAP,EAAAQ,OAAApC,EAAAiC,KAAAG,OAAAN,EAAAjB,KAAA,EAAAiB,EAAAhB,KAAA,EAAAJ,mBAAAK,MAUrBa,EAAAS,QAVqB,KAAA,EAUrBR,EAVqBC,EAAAb,KAWxBhB,EAAAC,KAAA2B,GAXwBC,EAAAhB,KAAA,GAAA,MAAA,KAAA,GAAAgB,EAAAjB,KAAA,GAAAiB,EAAAX,GAAAW,EAAA,MAAA,GAYxB/B,EAAQuB,OAAAA,KAAyBrB,EAAAC,KAAA,aAAAyB,OAAAG,EAAAX,GAAA,MAZT,KAAA,GAAA,IAAA,MAAA,OAAAW,EAAAT,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA","file":"Employee.min.js","sourcesContent":["var Employee = require('../models/Employee');\r\n// List of all Costumes\r\nexports.Employee_list = function(req, res) {\r\n res.send('NOT IMPLEMENTED: Employee list');\r\n};\r\n// for a specific Costume.\r\nexports.Employee_detail = function(req, res) {\r\n res.send('NOT IMPLEMENTED: Employee detail: ' + req.params.id);\r\n};\r\n// Handle Costume create on POST.\r\nexports.Employee_create_post = function(req, res) {\r\n res.send('NOT IMPLEMENTED: Employee create POST');\r\n};\r\n// Handle Costume delete form on DELETE.\r\nexports.Employee_delete = function(req, res) {\r\n res.send('NOT IMPLEMENTED: Employee delete DELETE ' + req.params.id);\r\n};\r\n// Handle Costume update form on PUT.\r\nexports.Employee_update_put = function(req, res) {\r\n res.send('NOT IMPLEMENTED: Employee update PUT' + req.params.id);\r\n};\r\n// VIEWS\r\n\r\n   // List of all Costumes\r\nexports.Employee_list = async function(req, res) {\r\n    try{\r\n    theEmployee = await Employee.find();\r\n    res.send(theEmployee);\r\n    }\r\n    catch(err){\r\n    res.status(500);\r\n    res.send(`{\"error\": ${err}}`);\r\n    }\r\n   };\r\n   // VIEWS\r\n// Handle a show all view\r\nexports.Employee_view_all_Page = async function(req, res) {\r\n    try{\r\n    theEmployee = await Employee.find();\r\n    res.render('Employee', { title: 'Employee Search Results', results: theEmployee });\r\n    }\r\n    catch(err){\r\n    res.status(500);\r\n    res.send(`{\"error\": ${err}}`);\r\n    }\r\n   };\r\n   // Handle Costume create on POST.\r\nexports.Employee_create_post = async function(req, res) {\r\n    console.log(req.body)\r\n    let document = new Employee();\r\n    // We are looking for a body, since POST does not have query parameters.\r\n    // Even though bodies can be in many different formats, we will be picky\r\n    // and require that it be a json object\r\n    // {\"costume_type\":\"goat\", \"cost\":12, \"size\":\"large\"}\r\n    document.EmpName = req.body.EmpName;\r\n    document.EmpType = req.body.EmpType;\r\n    document.EmpSal = req.body.EmpSal;\r\n    try{\r\n    let result = await document.save();\r\n    res.send(result);\r\n    }\r\n    catch(err){\r\n    res.status(500);\r\n    res.send(`{\"error\": ${err}}`);\r\n    }\r\n}"]}