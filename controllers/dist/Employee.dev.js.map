{"version":3,"sources":["Employee.js"],"names":["Employee","require","exports","Employee_list","req","res","send","Employee_detail","params","id","Employee_create_post","Employee_delete","Employee_update_put","find","theEmployee","status","Employee_view_all_Page","render","title","results","console","log","body","document","EmpName","EmpType","EmpSal","save","result","findById","JSON","stringify","toUpdate","findByIdAndDelete","Employee_view_one_Page","query","toShow","Employee_create_Page","err","Employee_update_Page","Employee_delete_Page"],"mappings":"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","sourcesContent":["var Employee = require('../models/Employee');\r\n// List of all Employees\r\nexports.Employee_list = function(req, res) {\r\n res.send('NOT IMPLEMENTED: Employee list');\r\n};\r\n// for a specific Employee.\r\nexports.Employee_detail = function(req, res) {\r\n res.send('NOT IMPLEMENTED: Employee detail: ' + req.params.id);\r\n};\r\n// Handle Employee create on POST.\r\nexports.Employee_create_post = function(req, res) {\r\n res.send('NOT IMPLEMENTED: Employee create POST');\r\n};\r\n// Handle Employee delete form on DELETE.\r\nexports.Employee_delete = function(req, res) {\r\n res.send('NOT IMPLEMENTED: Employee delete DELETE ' + req.params.id);\r\n};\r\n// Handle Employee update form on PUT.\r\nexports.Employee_update_put = function(req, res) {\r\n res.send('NOT IMPLEMENTED: Employee update PUT' + req.params.id);\r\n};\r\n// VIEWS\r\n\r\n   // List of all Employees\r\nexports.Employee_list = async function(req, res) {\r\n    try{\r\n    theEmployee = await Employee.find();\r\n    res.send(theEmployee);\r\n    }\r\n    catch(err){\r\n    res.status(500);\r\n    res.send(`{\"error\": ${err}}`);\r\n    }\r\n   };\r\n   // VIEWS\r\n// Handle a show all view\r\nexports.Employee_view_all_Page = async function(req, res) {\r\n    try{\r\n    theEmployee = await Employee.find();\r\n    res.render('Employee', { title: 'Employee Search Results', results: theEmployee });\r\n    }\r\n    catch(err){\r\n    res.status(500);\r\n    res.send(`{\"error\": ${err}}`);\r\n    }\r\n   };\r\n   // Handle Employee create on POST.\r\nexports.Employee_create_post = async function(req, res) {\r\n    console.log(req.body)\r\n    let document = new Employee();\r\n    // We are looking for a body, since POST does not have query parameters.\r\n    // Even though bodies can be in many different formats, we will be picky\r\n    // and require that it be a json object\r\n    // {\"EmpSal\":\"goat\", \"cost\":12, \"size\":\"large\"}\r\n    document.EmpName = req.body.EmpName;\r\n    document.EmpType = req.body.EmpType;\r\n    document.EmpSal = req.body.EmpSal;\r\n    try{\r\n    let result = await document.save();\r\n    res.send(result);\r\n    }\r\n    catch(err){\r\n    res.status(500);\r\n    res.send(`{\"error\": ${err}}`);\r\n    }\r\n}\r\n// for a specific Employee.\r\nexports.Employee_detail = async function(req, res) {\r\n    console.log(\"detail\" + req.params.id)\r\n    try {\r\n    result = await Employee.findById( req.params.id)\r\n    res.send(result)\r\n    } catch (error) {\r\n    res.status(500)\r\n    res.send(`{\"error\": document for id ${req.params.id} not found`);\r\n    }\r\n   };\r\n   // Handle Employee update form on PUT.\r\nexports.Employee_update_put = async function(req, res) {\r\n console.log(`update on id ${req.params.id} with body\r\n${JSON.stringify(req.body)}`)\r\n try {\r\n let toUpdate = await Employee.findById( req.params.id)\r\n // Do updates of properties\r\n if(req.body.EmpName) toUpdate.EmpName = req.body.EmpName;\r\n if(req.body.EmpSal) toUpdate.EmpSal = req.body.EmpSal;\r\n if(req.body.EmpType) toUpdate.EmpType = req.body.EmpType;\r\n let result = await toUpdate.save();\r\n console.log(\"Sucess \" + result)\r\n res.send(result)\r\n } catch (err) {\r\n res.status(500)\r\n res.send(`{\"error\": ${err}: Update for id ${req.params.id}\r\nfailed`);\r\n }\r\n};\r\n// Handle Employee delete on DELETE.\r\nexports.Employee_delete = async function(req, res) {\r\n    console.log(\"delete \" + req.params.id)\r\n    try {\r\n    result = await Employee.findByIdAndDelete( req.params.id)\r\n    console.log(\"Removed \" + result)\r\n    res.send(result)\r\n    } catch (err) {\r\n    res.status(500)\r\n    res.send(`{\"error\": Error deleting ${err}}`);\r\n    }\r\n    };\r\n// Handle a show one view with id specified by query\r\nexports.Employee_view_one_Page = async function(req, res) {\r\n    console.log(\"single view for id \" + req.query.id)\r\n    try{\r\n    result = await Employee.findById( req.query.id)\r\n    res.render('Employeedetail',\r\n    { title: 'Employee Detail', toShow: result });\r\n    }\r\n    catch(err){\r\n    res.status(500)\r\n    res.send(`{'error': '${err}'}`);\r\n    }\r\n    };\r\n// Handle building the view for creating a Employee.\r\n// No body, no in path parameter, no query.\r\n// Does not need to be async\r\nexports.Employee_create_Page = function(req, res) {\r\n    console.log(\"create view\")\r\n    try{\r\n    res.render('Employeecreate', { title: 'Employee Create'});\r\n    }\r\n    catch(err){\r\n    res.status(500)\r\n    res.send(`{'error': '${err}'}`);\r\n    }\r\n    };\r\n// Handle building the view for updating a Employee.\r\n// query provides the id\r\nexports.Employee_update_Page = async function(req, res) {\r\n    console.log(\"update view for item \"+req.query.id)\r\n    try{\r\n    let result = await Employee.findById(req.query.id)\r\n    res.render('Employeeupdate', { title: 'Employee Update', toShow: result });\r\n    }\r\n    catch(err){\r\n    res.status(500)\r\n    res.send(`{'error': '${err}'}`);\r\n    }\r\n    };\r\n// Handle a delete one view with id from query\r\nexports.Employee_delete_Page = async function(req, res) {\r\n    console.log(\"Delete view for id \" + req.query.id)\r\n    try{\r\n    result = await Employee.findById(req.query.id)\r\n    res.render('Employeedelete', { title: 'Employee Delete', toShow:\r\n    result });\r\n    }\r\n    catch(err){\r\n    res.status(500)\r\n    res.send(`{'error': '${err}'}`);\r\n    }\r\n    };"],"file":"Employee.dev.js"}