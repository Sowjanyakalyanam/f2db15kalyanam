{"version":3,"sources":["Employee.js"],"names":["Employee","require","exports","Employee_list","req","res","send","Employee_detail","params","id","Employee_create_post","Employee_delete","Employee_update_put","find","theEmployee","status","Employee_view_all_Page","render","title","results","console","log","body","document","EmpName","EmpType","EmpSal","save","result"],"mappings":"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","sourcesContent":["var Employee = require('../models/Employee');\r\n// List of all Costumes\r\nexports.Employee_list = function(req, res) {\r\n res.send('NOT IMPLEMENTED: Employee list');\r\n};\r\n// for a specific Costume.\r\nexports.Employee_detail = function(req, res) {\r\n res.send('NOT IMPLEMENTED: Employee detail: ' + req.params.id);\r\n};\r\n// Handle Costume create on POST.\r\nexports.Employee_create_post = function(req, res) {\r\n res.send('NOT IMPLEMENTED: Employee create POST');\r\n};\r\n// Handle Costume delete form on DELETE.\r\nexports.Employee_delete = function(req, res) {\r\n res.send('NOT IMPLEMENTED: Employee delete DELETE ' + req.params.id);\r\n};\r\n// Handle Costume update form on PUT.\r\nexports.Employee_update_put = function(req, res) {\r\n res.send('NOT IMPLEMENTED: Employee update PUT' + req.params.id);\r\n};\r\n// VIEWS\r\n\r\n   // List of all Costumes\r\nexports.Employee_list = async function(req, res) {\r\n    try{\r\n    theEmployee = await Employee.find();\r\n    res.send(theEmployee);\r\n    }\r\n    catch(err){\r\n    res.status(500);\r\n    res.send(`{\"error\": ${err}}`);\r\n    }\r\n   };\r\n   // VIEWS\r\n// Handle a show all view\r\nexports.Employee_view_all_Page = async function(req, res) {\r\n    try{\r\n    theEmployee = await Employee.find();\r\n    res.render('Employee', { title: 'Employee Search Results', results: theEmployee });\r\n    }\r\n    catch(err){\r\n    res.status(500);\r\n    res.send(`{\"error\": ${err}}`);\r\n    }\r\n   };\r\n   // Handle Costume create on POST.\r\nexports.Employee_create_post = async function(req, res) {\r\n    console.log(req.body)\r\n    let document = new Employee();\r\n    // We are looking for a body, since POST does not have query parameters.\r\n    // Even though bodies can be in many different formats, we will be picky\r\n    // and require that it be a json object\r\n    // {\"costume_type\":\"goat\", \"cost\":12, \"size\":\"large\"}\r\n    document.EmpName = req.body.EmpName;\r\n    document.EmpType = req.body.EmpType;\r\n    document.EmpSal = req.body.EmpSal;\r\n    try{\r\n    let result = await document.save();\r\n    res.send(result);\r\n    }\r\n    catch(err){\r\n    res.status(500);\r\n    res.send(`{\"error\": ${err}}`);\r\n    }\r\n}"],"file":"Employee.dev.js"}