"use strict";var createError=require("http-errors"),express=require("express"),path=require("path"),cookieParser=require("cookie-parser"),logger=require("morgan"),passport=require("passport"),LocalStrategy=require("passport-local").Strategy;app.use(function(e,r,o,s){o.locals.message=e.message,o.locals.error="development"===r.app.get("env")?e:{},o.status(e.status||500),o.render("error")}),passport.use(new LocalStrategy(function(e,o,s){Account.findOne({username:e},function(e,r){return e?s(e):r?r.validPassword(o)?s(null,r):s(null,!1,{message:"Incorrect password."}):s(null,!1,{message:"Incorrect username."})})})),require("dotenv").config();var connectionString=process.env.MONGO_CON;mongoose=require("mongoose"),mongoose.connect(connectionString,{useNewUrlParser:!0,useUnifiedTopology:!0});var db=mongoose.connection;db.on("error",console.error.bind(console,"MongoDB connectionerror:")),db.once("open",function(){console.log("Connection to DB succeeded")});var indexRouter=require("./routes/index"),usersRouter=require("./routes/users"),EmployeeRouter=require("./routes/Employee"),gridbuildRouter=require("./routes/gridbuild"),resourceRouter=require("./routes/resource"),selectorRouter=require("./routes/selector"),Employee=require("./models/Employee"),app=express();app.set("views",path.join(__dirname,"views")),app.set("view engine","pug"),app.use(logger("dev")),app.use(express.json()),app.use(express.urlencoded({extended:!1})),app.use(cookieParser()),app.use(require("express-session")({secret:"keyboard cat",resave:!1,saveUninitialized:!1})),app.use(passport.initialize()),app.use(passport.session()),app.use(express.static(path.join(__dirname,"public"))),app.use("/",indexRouter),app.use("/users",usersRouter),app.use("/gridbuild",gridbuildRouter),app.use("/Employee",EmployeeRouter),app.use("/selector",selectorRouter),app.use("/resource",resourceRouter);var Account=require("./models/account");function recreateDB(){return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,regeneratorRuntime.awrap(Employee.deleteMany());case 2:new Employee({EmpName:"Sowji",EmpType:"Permanent",EmpSal:1e3}).save(function(e,r){if(e)return console.error(e);console.log("First object saved")}),new Employee({EmpName:"Sai",EmpType:"Temporary",EmpSal:2e3}).save(function(e,r){if(e)return console.error(e);console.log("second object saved")}),new Employee({EmpName:"Kusuma",EmpType:"Temporary",EmpSal:3e3}).save(function(e,r){if(e)return console.error(e);console.log("Third object saved")});case 8:case"end":return e.stop()}})}passport.use(new LocalStrategy(Account.authenticate())),passport.serializeUser(Account.serializeUser()),passport.deserializeUser(Account.deserializeUser()),app.use(function(e,r,o,s){o.locals.message=e.message,o.locals.error="development"===r.app.get("env")?e:{},o.status(e.status||500),o.render("error")});var reseed=!0;reseed&&recreateDB(),app.use(function(e,r,o){o(createError(404))}),module.exports=app;
//# sourceMappingURL=app.min.js.map
