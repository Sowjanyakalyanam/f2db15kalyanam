{"version":3,"sources":["app.js"],"names":["createError","require","express","path","cookieParser","logger","passport","LocalStrategy","Strategy","use","username","password","done","Account","findOne","err","user","message","validPassword","config","connectionString","process","env","MONGO_CON","mongoose","connect","useNewUrlParser","useUnifiedTopology","db","connection","on","console","error","bind","once","log","indexRouter","usersRouter","EmployeeRouter","gridbuildRouter","resourceRouter","selectorRouter","Employee","app","set","join","__dirname","json","urlencoded","extended","secret","resave","saveUninitialized","initialize","session","authenticate","serializeUser","deserializeUser","req","res","next","locals","get","status","render","recreateDB","deleteMany","instance1","EmpName","EmpType","EmpSal","save","doc","instance2","instance3","reseed","module","exports"],"mappings":"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","sourcesContent":["var createError = require('http-errors');\r\nvar express = require('express');\r\nvar path = require('path');\r\nvar cookieParser = require('cookie-parser');\r\nvar logger = require('morgan');\r\nvar passport = require('passport');\r\nvar LocalStrategy = require('passport-local').Strategy;\r\n\r\npassport.use(new LocalStrategy(\r\n  function(username, password, done) {\r\n  Account.findOne({ username: username }, function (err, user) {\r\n  if (err) { return done(err); }\r\n  if (!user) {\r\n  return done(null, false, { message: 'Incorrect username.' });\r\n  }\r\n  if (!user.validPassword(password)) {\r\n  return done(null, false, { message: 'Incorrect password.' });\r\n  }\r\n  return done(null, user);\r\n  });\r\n  }\r\n ));\r\nrequire('dotenv').config();\r\nconst connectionString =\r\nprocess.env.MONGO_CON\r\nmongoose = require('mongoose');\r\nmongoose.connect(connectionString,\r\n{useNewUrlParser: true,\r\nuseUnifiedTopology: true});\r\n//Get the default connection\r\n\r\nvar db = mongoose.connection;\r\n//Bind connection to error event\r\ndb.on('error', console.error.bind(console, 'MongoDB connectionerror:'));\r\ndb.once(\"open\", function(){\r\nconsole.log(\"Connection to DB succeeded\")});\r\nvar indexRouter = require('./routes/index');\r\nvar usersRouter = require('./routes/users');\r\nvar EmployeeRouter = require('./routes/Employee');\r\nvar gridbuildRouter = require('./routes/gridbuild');\r\nvar resourceRouter = require('./routes/resource');\r\nvar selectorRouter = require('./routes/selector');\r\nvar Employee = require(\"./models/Employee\");\r\nvar app = express();\r\n\r\n// view engine setup\r\napp.set('views', path.join(__dirname, 'views'));\r\napp.set('view engine', 'pug');\r\n\r\napp.use(logger('dev'));\r\napp.use(express.json());\r\napp.use(express.urlencoded({ extended: false }));\r\napp.use(cookieParser());\r\napp.use(require('express-session')({\r\n  secret: 'keyboard cat',\r\n  resave: false,\r\n  saveUninitialized: false\r\n }));\r\n app.use(passport.initialize());\r\n app.use(passport.session());\r\napp.use(express.static(path.join(__dirname, 'public')));\r\n\r\napp.use('/', indexRouter);\r\napp.use('/users', usersRouter);\r\napp.use('/gridbuild', gridbuildRouter);\r\napp.use('/Employee', EmployeeRouter);\r\napp.use('/selector', selectorRouter);\r\n\r\napp.use('/resource', resourceRouter);\r\n// passport config\r\n// Use the existing connection\r\n// The Account model\r\nvar Account =require('./models/account');\r\npassport.use(new LocalStrategy(Account.authenticate()));\r\npassport.serializeUser(Account.serializeUser());\r\npassport.deserializeUser(Account.deserializeUser());\r\napp.use(function(err, req, res, next) {\r\n  // set locals, only providing error in development\r\n  res.locals.message = err.message;\r\n  res.locals.error = req.app.get('env') === 'development' ? err : {};\r\n\r\n  // render the error page\r\n  res.status(err.status || 500);\r\n  res.render('error');\r\n});\r\n// We can seed the collection if needed on server start\r\nasync function recreateDB(){\r\n // Delete everything\r\n    await Employee.deleteMany();\r\n    let instance1 = new Employee({EmpName:\"Sowji\", EmpType:\"Permanent\",EmpSal:1000});\r\n    instance1.save( function(err,doc) {\r\n      if(err) return console.error(err);\r\n      console.log(\"First object saved\")\r\n      });\r\n    let instance2 = new Employee({EmpName:\"Sai\", EmpType:\"Temporary\",EmpSal:2000});\r\n    instance2.save( function(err,doc) {\r\n      if(err) return console.error(err);\r\n      console.log(\"second object saved\")\r\n      });\r\n      let instance3 = new Employee({EmpName:\"Kusuma\", EmpType:\"Temporary\",EmpSal:3000});\r\n    instance3.save( function(err,doc) {\r\n      if(err) return console.error(err);\r\n      console.log(\"Third object saved\")\r\n      });\r\n}\r\nlet reseed = true;\r\nif (reseed) { recreateDB();}\r\n// catch 404 and forward to error handler\r\napp.use(function(req, res, next) {\r\n  next(createError(404));\r\n});\r\n\r\n\r\n\r\nmodule.exports = app;\r\n"],"file":"app.dev.js"}