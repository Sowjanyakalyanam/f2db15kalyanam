{"version":3,"sources":["index.js"],"names":["express","require","passport","Router","Account","router","req","res","render","title","user","get","username","body","err","message","post","findOne","account","newAccount","password","console","log","redirect","authenticate","returnTo","logout","status","send"],"mappings":"aAAA,IAAIA,QAAUC,QAAQ,WAClBC,SAAWD,QAAQ,YADnBD,OAAOA,QAAUG,SAGjBC,QAAUH,QAAQ,qBAFtBI,OAAIH,IAAAA,IAAWD,SAAQK,EAAAC,GAIrBA,EAAIC,OAAO,QAAS,CAAEC,MAAO,eAAgBC,KAAMJ,EAAII,SAEzDL,OAAOM,IAAI,YAAa,SAAUL,EAAKC,GAJvCA,EAAIH,OAAO,WAAW,CAAAK,MAAA,gCACtBJ,OAAOM,KAAI,YAAK,SAAAL,EAAoBC,GAClCA,QAAIC,QAAO,CAAXI,SAAoBN,EAAAO,KAAAD,UAAEH,SAAOK,EAAAJ,GAAgBA,GAAMJ,EAAnD,OAAAC,EAAAC,OAAA,WAAA,CADFC,MAAA,eAGAM,QAAW,qBAA4BR,QAAKD,EAAAO,KAAAD,WAC1C,GAAAF,GAAA,GADF,OAAAH,EAAAC,OAAA,WAAA,CAGOQ,MAAK,eACFC,QAAQ,gBAAAC,QAAAZ,EAAAO,KAAAD,WAEZ,IAAIE,EAAK,IAAAV,QAAA,CAAAQ,SAAAN,EAAAO,KAAAD,WACPR,QAAOG,SAAAY,EAAAb,EAAuBO,KAAAO,SAAA,SAAAN,EAAAJ,GAC5BD,OAAAA,EACSF,EAAAC,OAAA,WAFmB,CAEGU,MAASZ,eAF1CS,QAAA,eAAAG,QAAAZ,EAAAO,KAAAD,WAKMF,GAKPW,QAAAC,IAAA,yBAgBCf,EAAIgB,SAAS,MApBFf,EAAAA,OAAO,WAAY,CAC5BC,MAAO,eACPM,QAAS,eAFmBG,QAAAZ,EAAAO,KAAAD,iBAMhCR,OAAAA,IAAO,SAAUe,SAAjBb,EAAgCC,GAC9BA,EAAAC,OAAA,QAAS,CAAAC,MAAA,qBAAAC,KAAAJ,EAAAI,SAELD,OAAAA,KAAAA,SAAOP,SADqBsB,aAAA,SAAA,SAAAlB,EAAAC,GAE5BQ,EAAAA,QAAOU,UAAkBP,EAAAA,SAAAA,EAASZ,QAAAmB,UAFNlB,EAAAgB,SAA9B,OAwBVlB,OAAOM,IAAI,UAAW,SAAUL,EAAKC,GAnB7BD,EAAAoB,OAAKhB,SAAMI,GAEPL,GAAAA,EACAM,OAAAA,KAAOD,GAEVP,EAAAgB,SAAA,SAGFlB,OAfDM,IAAA,QAAA,SAAAL,EAAAC,GAgBDA,EA/BHoB,OAAA,KAAAC,KAAA,WAiCFvB,OAAOM,QAAIN","file":"index.min.js","sourcesContent":["var express = require('express');\r\nvar passport = require('passport');\r\nvar router = express.Router();\r\nvar Account = require('../models/account');\r\nrouter.get('/', function (req, res) {\r\n  res.render('index', { title: 'Employee App', user: req.user });\r\n});\r\nrouter.get('/register', function (req, res) {\r\n  res.render('register', { title: 'Employee App Registration' });\r\n});\r\nrouter.post('/register', function (req, res) {\r\n  Account.findOne({ username: req.body.username },\r\n    function (err, user) {\r\n      if (err) {\r\n        return res.render('register', {\r\n          title: 'Registration',\r\n          message: 'Registration error', account: req.body.username\r\n        })\r\n      }\r\n      if (user == {}) {\r\n        return res.render('register', {\r\n          title: 'Registration',\r\n          message: 'Existing User', account: req.body.username\r\n        })\r\n      }\r\n      let newAccount = new Account({ username: req.body.username });\r\n      Account.register(newAccount, req.body.password, function (err, user) {\r\n        if (err) {\r\n          return res.render('register', {\r\n            title: 'Registration',\r\n            message: 'access error', account: req.body.username\r\n          })\r\n        }\r\n        if (!user) {\r\n          return res.render('register', {\r\n            title: 'Registration',\r\n            message: 'access error', account: req.body.username\r\n          })\r\n        }\r\n        console.log('Sucess, redirect');\r\n        res.redirect('/');\r\n      })\r\n    })\r\n})\r\nrouter.get('/login', function (req, res) {\r\n  res.render('login', { title: 'Employee App Login', user: req.user });\r\n});\r\nrouter.post('/login', passport.authenticate('local'), function (req, res) {\r\n  if(req.session.returnTo) \r\n  res.redirect(req.session.returnTo); \r\nres.redirect('/'); \r\n});\r\nrouter.get('/logout', function (req, res) {\r\n  req.logout( function(err) {\r\n\r\n    if (err) { \r\n      return next(err);\r\n    }\r\n\r\n    res.redirect('/');\r\n\r\n});\r\n});\r\nrouter.get('/ping', function (req, res) {\r\n  res.status(200).send(\"pong!\");\r\n});\r\nmodule.exports = router;"]}